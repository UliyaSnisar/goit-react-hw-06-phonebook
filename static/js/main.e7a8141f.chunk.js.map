{"version":3,"sources":["Component/ContactList/ContactList.module.css","Component/Filter/Filter.module.css","Component/ElementContactList/ElementContactList.module.css","Component/Container/Container.module.css","Component/Container/Container.js","redux/phonebook/phonebook-action.js","Component/ContactForm/ContactForm.js","Component/Filter/Filter.js","Component/ElementContactList/ElementContactList.js","Component/ContactList/ContactList.js","App.js","redux/phonebook/phonebook-reducer.js","redux/store.js","index.js","Component/ContactForm/ContactForm.module.css"],"names":["module","exports","Container","children","className","styles","contactAction","addContact","createAction","name","number","payload","id","uuidv4","deleteContact","changeFilter","ContactForm","state","nameInputId","numberInputId","handleChange","e","currentTarget","value","setState","handleSubmit","preventDefault","props","onSubmit","reset","alert","this","contacts_form","htmlFor","label","type","pattern","title","required","onChange","input","form_button","Component","defaultProps","connect","dispatch","contactActions","contacts","filter","target","ElementContactList","contact_name","contact_number","getVisibleContacts","normalizedFilter","toLowerCase","contact","includes","items","onClick","contact_list","map","contact_item","item_button","App","React","createReducer","contactsAction","_","combineReducers","contactsPersistConfig","key","storage","blacklist","middleware","getDefaultMiddleware","serializableCheck","ignoredActions","FLUSH","REHYDRATE","PAUSE","PERSIST","PURGE","REGISTER","logger","store","configureStore","reducer","persistReducer","contactsReducer","devTools","process","persistor","persistStore","ReactDOM","render","StrictMode","loading","document","getElementById"],"mappings":"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","file":"static/js/main.e7a8141f.chunk.js","sourcesContent":["// extracted by mini-css-extract-plugin\nmodule.exports = {\"stat_list\":\"ContactList_stat_list__ZThyE\",\"item\":\"ContactList_item__1SyR7\",\"contact_list\":\"ContactList_contact_list__3dLs1\",\"contact_item\":\"ContactList_contact_item__1wegB\",\"item_button\":\"ContactList_item_button__6Uytb\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"friend_list\":\"Filter_friend_list__27hGr\",\"item\":\"Filter_item__1MT29\",\"avatar\":\"Filter_avatar__3OKXt\",\"name\":\"Filter_name__1sZ2Z\",\"status_isOnline\":\"Filter_status_isOnline__2jsM0\",\"status_isOffline\":\"Filter_status_isOffline__3iQRc\",\"label\":\"Filter_label__viyHG\",\"input\":\"Filter_input__VyhOp\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"contact_name\":\"ElementContactList_contact_name__3_2wD\",\"contact_number\":\"ElementContactList_contact_number__8Be4G\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"Container\":\"Container_Container__2TatE\"};","import React from 'react';\nimport styles from './Container.module.css';\n\nconst Container = ({ children }) => (\n  <div className={styles.Container}>{children}</div>\n);\n\nexport default Container;\n","import { v4 as uuidv4 } from 'uuid';\nimport { createAction } from '@reduxjs/toolkit';\n\nconst addContact = createAction('contacts/add', (name, number) => ({\n  payload: {\n    id: uuidv4(),\n    name,\n    number,\n  },\n}));\n\nconst deleteContact = createAction('contacts/delete');\n\nconst changeFilter = createAction('contacts/changeFilter');\n\nconst contactAction = { addContact, deleteContact, changeFilter };\nexport default contactAction;\n\n//без Redux Toolkit\n// import types from './phonebook-types';\n// import { v4 as uuidv4 } from 'uuid';\n\n// const addContact = ({ name, number }) => ({\n//   type: types.ADD,\n//   payload: {\n//     id: uuidv4(),\n//     name: name,\n//     number: number,\n//   },\n// });\n\n// const deleteContact = contactId => ({\n//   type: types.DELETE,\n//   payload: contactId,\n// });\n\n// const changeFilter = value => ({\n//   type: types.CHANGE_FILTER,\n//   payload: value,\n// });\n\n// export default { addContact, deleteContact, changeFilter };\n","import React, { Component } from 'react';\nimport { connect } from 'react-redux';\nimport contactActions from '../../redux/phonebook/phonebook-action';\nimport { v4 as uuidv4 } from 'uuid';\nimport PropTypes from 'prop-types';\nimport styles from './ContactForm.module.css';\n\nclass ContactForm extends Component {\n  static defaultProps = {\n    name: '',\n    number: '',\n  };\n\n  static propTypes = {\n    name: PropTypes.string,\n    number: PropTypes.string,\n  };\n\n  state = {\n    name: '',\n    number: '',\n  };\n\n  nameInputId = uuidv4();\n  numberInputId = uuidv4();\n\n  handleChange = e => {\n    const { name, value } = e.currentTarget;\n    this.setState({ [name]: value });\n  };\n\n  handleSubmit = e => {\n    e.preventDefault();\n    const { name, number } = this.state;\n\n    if (name !== '' && number !== '') {\n      this.props.onSubmit(name, number);\n      this.reset();\n      return;\n    }\n    alert('Please fill empty fields');\n  };\n\n  reset = () => {\n    this.setState({ name: '', number: '' });\n  };\n\n  render() {\n    const { name, number } = this.state;\n\n    return (\n      <>\n        <form onSubmit={this.handleSubmit} className={styles.contacts_form}>\n          <div>\n            <label htmlFor={this.nameInputId} className={styles.label}>\n              Name\n              <input\n                type=\"text\"\n                value={name}\n                name=\"name\"\n                pattern=\"^[a-zA-Zа-яА-Я]+(([' -][a-zA-Zа-яА-Я ])?[a-zA-Zа-яА-Я]*)*$\"\n                title=\"Имя может состоять только из букв, апострофа, тире и пробелов. Например Adrian, Jacob Mercer, Charles de Batz de Castelmore d'Artagnan и т. п.\"\n                required\n                onChange={this.handleChange}\n                id={this.nameInputId}\n                className={styles.input}\n              />\n            </label>\n          </div>\n          <div>\n            <label htmlFor={this.numberInputId} className={styles.label}>\n              Number\n              <input\n                type=\"tel\"\n                value={number}\n                name=\"number\"\n                pattern=\"\\+?\\d{1,4}?[-.\\s]?\\(?\\d{1,3}?\\)?[-.\\s]?\\d{1,4}[-.\\s]?\\d{1,4}[-.\\s]?\\d{1,9}\"\n                title=\"Номер телефона должен состоять цифр и может содержать пробелы, тире, круглые скобки и может начинаться с +\"\n                required\n                onChange={this.handleChange}\n                id={this.numberInputId}\n                className={styles.input}\n              />\n            </label>\n          </div>\n\n          <button type=\"submit\" className={styles.form_button}>\n            Add contact\n          </button>\n        </form>\n      </>\n    );\n  }\n}\n\nconst mapDispatchToProps = dispatch => ({\n  onSubmit: (name, number) => dispatch(contactActions.addContact(name, number)),\n});\nexport default connect(null, mapDispatchToProps)(ContactForm);\n","// import PropTypes from 'prop-types';\nimport React from 'react';\nimport styles from './Filter.module.css';\nimport { connect } from 'react-redux';\nimport contactActions from '../../redux/phonebook/phonebook-action';\n\nconst Filter = ({ value, onChange }) => {\n  return (\n    <label className={styles.label}>\n      Find contact by name\n      <input\n        type=\"text\"\n        value={value}\n        onChange={onChange}\n        className={styles.input}\n      />\n    </label>\n  );\n};\n// Filter.propTypes = {\n//   value: PropTypes.string.isRequired,\n//   onChange: PropTypes.func.isRequired,\n// };\n\nconst mapStateToProps = state => ({\n  value: state.contacts.filter,\n});\n\nconst mapDispatchToProps = dispatch => ({\n  onChange: e => dispatch(contactActions.changeFilter(e.target.value)),\n});\nexport default connect(mapStateToProps, mapDispatchToProps)(Filter);\n","import React from 'react';\nimport PropTypes from 'prop-types';\nimport styles from '../ElementContactList/ElementContactList.module.css';\n\nconst ElementContactList = ({ name, number }) => {\n  return (\n    <>\n      <span className={styles.contact_name}>{name}: </span>\n      <span className={styles.contact_number}>{number}</span>\n    </>\n  );\n};\n\nElementContactList.propTypes = {\n  name: PropTypes.string,\n  number: PropTypes.string,\n};\n\nElementContactList.defaultProps = {\n  name: 'Hello World',\n  number: 123456789,\n};\nexport default ElementContactList;\n","import React from 'react';\nimport { connect } from 'react-redux';\nimport contactActions from '../../redux/phonebook/phonebook-action';\nimport ElementContactList from '../ElementContactList/ElementContactList';\nimport styles from './ContactList.module.css';\n\nconst ContactList = ({ contacts, onClick }) => {\n  return (\n    <ul className={styles.contact_list}>\n      {contacts.map(({ id, name, number }) => (\n        <li key={id} className={styles.contact_item}>\n          <ElementContactList name={name} number={number} />\n          <button\n            type=\"button\"\n            onClick={() => {\n              onClick(id);\n            }}\n            className={styles.item_button}\n          >\n            Delete\n          </button>\n        </li>\n      ))}\n    </ul>\n  );\n};\n\nconst getVisibleContacts = (contacts, filter) => {\n  const normalizedFilter = filter.toLowerCase();\n\n  return contacts.filter(contact =>\n    contact.name.toLowerCase().includes(normalizedFilter),\n  );\n};\n\nconst mapStateToProps = ({ contacts: { items, filter } }) => ({\n  contacts: getVisibleContacts(items, filter),\n});\n\nconst mapDispatchToProps = dispatch => ({\n  onClick: id => dispatch(contactActions.deleteContact(id)),\n});\nexport default connect(mapStateToProps, mapDispatchToProps)(ContactList);\n","import React from 'react';\n// import { connect } from 'react-redux';\n// import { v4 as uuidv4 } from 'uuid';\nimport PropTypes from 'prop-types';\nimport Container from './Component/Container/Container';\nimport ContactForm from './Component/ContactForm/ContactForm';\nimport Filter from './Component/Filter/Filter';\nimport ContactList from './Component/ContactList/ContactList';\n\nclass App extends React.Component {\n  static propTypes = {\n    contacts: PropTypes.array,\n    filter: PropTypes.string,\n  };\n\n  render() {\n    return (\n      <Container>\n        <div>\n          <h1>Phonebook</h1>\n          {/* <ContactForm onSubmit={this.formAddContact} /> */}\n          <ContactForm />\n\n          <h2>Contacts</h2>\n          {/* <Filter value={this.state.filter} onChange={this.changeFilter} /> */}\n          <Filter />\n\n          {/* <ContactList\n            visibleContacts={this.getVisibleContacts}\n            onClick={this.deleteContact}\n          /> */}\n          <ContactList />\n        </div>\n      </Container>\n    );\n  }\n}\nexport default App;\n","import { combineReducers } from 'redux';\nimport { createReducer } from '@reduxjs/toolkit';\nimport contactsAction from './phonebook-action';\nimport contacts from '../../json/contacts.json';\n\nconst items = createReducer(contacts, {\n  [contactsAction.addContact]: (state, { payload }) => {\n    if (state.map(contact => contact.name).includes(payload.name)) {\n      return alert(`${payload.name} is already exist`);\n    }\n    return [...state, payload];\n  },\n  [contactsAction.deleteContact]: (state, { payload }) =>\n    state.filter(({ id }) => id !== payload),\n});\n\nconst filter = createReducer('', {\n  [contactsAction.changeFilter]: (_, { payload }) => payload,\n});\n\nexport default combineReducers({\n  items,\n  filter,\n});\n\n//без Redux Toolkit\n// import { combineReducers } from 'redux';\n// import types from './phonebook-types';\n\n// const items = (state = [], { type, payload }) => {\n//   switch (type) {\n//     case types.ADD:\n//       return [...state, payload];\n\n//     case types.DELETE:\n//       return state.filter(contact => contact.id !== payload);\n\n//     default:\n//       return state;\n//   }\n// };\n\n// const filter = (state = '', { type, payload }) => {\n//   switch (type) {\n//     case types.CHANGE_FILTER:\n//       return payload;\n\n//     default:\n//       return state;\n//   }\n// };\n\n// export default combineReducers({\n//   items,\n//   filter,\n// });\n","import { configureStore, getDefaultMiddleware } from '@reduxjs/toolkit';\nimport contactsReducer from './phonebook/phonebook-reducer';\nimport logger from 'redux-logger';\nimport {\n  persistStore,\n  persistReducer,\n  FLUSH,\n  REHYDRATE,\n  PAUSE,\n  PERSIST,\n  PURGE,\n  REGISTER,\n} from 'redux-persist';\nimport storage from 'redux-persist/lib/storage';\n\nconst contactsPersistConfig = {\n  key: 'contacts',\n  storage,\n  blacklist: ['filter'],\n};\n\nconst middleware = [\n  ...getDefaultMiddleware({\n    serializableCheck: {\n      ignoredActions: [FLUSH, REHYDRATE, PAUSE, PERSIST, PURGE, REGISTER],\n    },\n  }),\n  logger,\n];\n\n// const rootReducer = combineReducers({\n//   contacts: persistReducer(persistConfig, rootReducer),\n// });\n// const persistedReducer = persistReducer(persistConfig, rootReducer);\n\nconst store = configureStore({\n  reducer: {\n    contacts: persistReducer(contactsPersistConfig, contactsReducer),\n  },\n  middleware,\n  devTools: process.env.NODE_ENV === 'development',\n});\n\nconst persistor = persistStore(store);\n\nexport default { store, persistor };\n\n// ---------------1й вариант, без Redux Toolkit\n// import { createStore, combineReducers } from 'redux';\n// import { composeWithDevTools } from 'redux-devtools-extension';\n// import contactsReduser from './phonebook/phonebook-reducer';\n\n// const rootReducer = combineReducers({\n//   contacts: contactsReduser,\n// });\n\n// const store = createStore(rootReducer, composeWithDevTools());\n\n// export default store;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport App from './App';\nimport store from './redux/store';\nimport { Provider } from 'react-redux';\nimport './styles.css';\nimport 'modern-normalize/modern-normalize.css';\nimport { BrowserRouter } from 'react-router-dom';\nimport { PersistGate } from 'redux-persist/integration/react';\n\nReactDOM.render(\n  <React.StrictMode>\n    <Provider store={store.store}>\n      <PersistGate loading={null} persistor={store.persistor}>\n        <BrowserRouter>\n          <App />\n        </BrowserRouter>\n      </PersistGate>\n    </Provider>\n  </React.StrictMode>,\n  document.getElementById('root'),\n);\n","// extracted by mini-css-extract-plugin\nmodule.exports = {\"contacts_form\":\"ContactForm_contacts_form__1OkBR\",\"form_button\":\"ContactForm_form_button__G1Smb\",\"label\":\"ContactForm_label__28h2B\",\"input\":\"ContactForm_input__AG7Bb\"};"],"sourceRoot":""}